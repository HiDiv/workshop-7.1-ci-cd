{"mappings":"AAAAA,SAAS,OAAO,WAEZA,SAAS,0BAAwB,oBAEJC,EAANC,GACf,MAAMC,EAAWD,EAAIA,EAAIA,EACzBE,GAAG,kBAAiBF,EAAA,2BAA8CC,GAAA,WAChCE,OAAvBC,MAAMC,IAAIL,EAAG,GAAIC,MAIhC,IAAK,IAAIK,EAAI,EAAGA,GAAK,EAAGA,IACpBP,EAASO,MAKjBJ,GAAG,wDAAsD,WACVC,OAApCI,MAAMF,IAAI,GAAG,IAAM,wBAG9BH,GAAG,kDAAgD,WACVC,OAA9BI,MAAMF,IAAI,EAAG,MAAO,0BAG/BP,SAAS,gDAA8C,oBAEVC,EAAtBC,GACfE,GAAG,kBAAiBF,EAAA,6BAA+C,WAClDG,OAAOC,MAAMC,IAAIL,EAAG,GAAI,MAIhC,IAAK,IAAIQ,GAAI,EAAIA,GAAK,EAAGA,GAAK,EAC1BT,EAASS","sources":["src/scripts/test.js"],"sourcesContent":["describe(\"pow\", function () {\n\n    describe(\"возводит x в степень n\", function () {\n\n        function makeTest (x) {\n            const expected = x * x * x;\n            it(\"при возведении \" + x + \" в степень 3 результат: \" + expected, function () {\n                assert.equal(pow(x, 3), expected);\n            });\n        }\n\n        for (let x = 1; x <= 5; x++) {\n            makeTest(x);\n        }\n\n    });\n\n    it(\"при возведении в отрицательную степень результат NaN\", function () {\n        assert(isNaN(pow(2, -1)), \"pow(2, -1) не NaN\");\n    });\n\n    it(\"при возведении в дробную степень результат NaN\", function () {\n        assert(isNaN(pow(2, 1.5)), \"pow(2, -1.5) не NaN\");\n    });\n\n    describe(\"любое число, кроме нуля, в степени 0 равно 1\", function () {\n\n        function makeTest (x) {\n            it(\"при возведении \" + x + \" в степень 0 результат: 1\", function () {\n                assert.equal(pow(x, 0), 1);\n            });\n        }\n\n        for (let x = -5; x <= 5; x += 2) {\n            makeTest(x);\n        }\n\n    });\n\n});\n"],"names":["describe","makeTest","x","expected","it","assert","equal","pow","x1","isNaN","x2"],"version":3,"file":"index.c9d3d298.js.map"}